-- @atlcompiler atl2006

module RDF2MODEL;
create OUT : Model from IN : RDF, IN2 : Properties, IN3 : Ecore;

helper def: isValid(s : String) : Boolean =
 if s.oclIsUndefined() then
  false
 else
  s.trim().size() > 0
 endif;

rule Person {
 from
  r : RDF!SubjectNode
  (
   Ecore!EClass.allInstancesFrom('IN3')->any(it |
    it.name = 'Person'
   ).isValidObject(r)
  )
 to
  o : Model!Person (
   hasFather <- r.getValues('http://example.org/family.ecore#hasFather')->first(),
   hasSister <- r.getValues('http://example.org/family.ecore#hasSister'),
   hasUncle <- r.getValues('http://example.org/family.ecore#hasUncle'),
   hasBrother <- r.getValues('http://example.org/family.ecore#hasBrother')
  )
 do {
  if(thisModule.isValid(r.getStringValue('http://example.org/family.ecore#name')))
   o.name <- r.getStringValue('http://example.org/family.ecore#name').convertTo('EString');
  if(thisModule.isValid(r.getStringValue('http://example.org/family.ecore#height')))
   o.height <- r.getStringValue('http://example.org/family.ecore#height').convertTo('EFloat');
  if(thisModule.isValid(r.getStringValue('http://example.org/family.ecore#age')))
   o.age <- r.getStringValue('http://example.org/family.ecore#age').convertTo('EInt');
  
 }
}

rule Family {
 from
  r : RDF!SubjectNode
  (
   Ecore!EClass.allInstancesFrom('IN3')->any(it |
    it.name = 'Family'
   ).isValidObject(r)
  )
 to
  o : Model!Family (
   member <- r.getValues('http://example.org/family.ecore#member')
  )
 do {
  
 }
}
